{
        // https://www.sublimetext.com/docs/completions.html

        "scope": "source.hansl",

        "completions":
        [

              // Functions
              {
                   "trigger": "abs",
                   "annotation": "Absolute value of x",
                   "contents": "abs(${1:scalar/series/matrix)}) $0\n",
                   "kind": "function",
                   "details": "return: same type as input "
              },
              {
                   "trigger": "aggregate",
                   "annotation": "Grouped statistics",
                   "contents": "aggregate(${1:x(series/list))}, ${2:byvar(series/list))}, ${3:[funcname(string)]}) $0\n",
                   "kind": "function",
                   "details": "return: same type as input"
              },


              // Commands
              {
                     "trigger": "add",
                     "annotation": "Joint test for adding variables",
                     "contents": "add ${1:varlist} $0",
                     "kind": "namespace",
                     "details": "Options: --lm, --quiet, --silent, --vcv, --both"
              },
              {
                     "trigger": "adf",
                     "annotation": "Dickey-Fuller test",
                     "contents": "adf ${1:order} ${2:varlist} $0",
                     "kind": "namespace",
                     "details": "Options: --nc, --c, --ct, --ctt, --seasonals, --gls"
              },
              {
                     "trigger": "anova",
                     "annotation": "ANOVA analysis of variance",
                     "contents": "anova ${1:response} ${2:treatment} ${3:[ block ]} $0",
                     "kind": "namespace",
                     "details": "Options: --quiet"
              },
              {
                     "trigger": "append",
                     "annotation": "Append data the current dataset",
                     "contents": "append ${1:filename} $0",
                     "kind": "namespace",
                     "details": "Options: --time-series, --fixed-sample, --update-overlap, --quiet"
              },
              {
                     "trigger": "ar",
                     "annotation": "Cochrane-Orcutt dynamic model",
                     "contents": "ar ${1:lags} ; ${2:depvar} ${3:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --vcv, --quiet"
              },
              {
                     "trigger": "ar1",
                     "annotation": "FGLS estimates for an AR(1) model",
                     "contents": "ar1 ${1:depvar} ${2:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --hilu, --pwe, --vcv, --no-corc, --loose, --quiet"
              },
              {
                     "trigger": "arbond",
                     "annotation": "Arellano/ Bond (1991) GMM-DIF panel model",
                     "contents": "arbond ${1:p} ${2:[ q ]} ; ${3:depvar} ${4:indepvars} ${5:[ ; instruments ]} $0",
                     "kind": "namespace",
                     "details": "Options: --vcv, --two-step, --time-dummies, --quiet, --asymptotic"
              },
              {
                     "trigger": "arch",
                     "annotation": "estimate ARCH model",
                     "contents": "arch ${1:order} ${2:depvar} ${3:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --quiet"
              },
              {
                     "trigger": "arima",
                     "annotation": "estimate ARIMA model",
                     "contents": "arima ${1:p} ${2:d} ${3:q} ${4:[ ; P D Q ]} ; ${5:depvar} ${6:[ indepvars ]} $0",
                     "kind": "namespace",
                     "details": "Options: --verbose, --quiet, --vcv, --hessian, --opg, --nc, --conditional, --x-12-arima, --lbfgs, --y-diff-only"
              },
              {
                     "trigger": "arma",
                     "annotation": "estimate ARMA model",
                     "contents": "arma ${1:p} ${2:d} ${3:q} ${4:[ ; P D Q ]} ; ${5:depvar} ${6:[ indepvars ]} $0",
                     "kind": "namespace",
                     "details": "Options: --verbose, --quiet, --vcv, --hessian, --opg, --nc, --conditional, --x-12-arima, --lbfgs, --y-diff-only"
              },
              {
                     "trigger": "bds",
                     "annotation": "BDS test for nonlinearity",
                     "contents": "bds ${1:order} ${2:x} $0",
                     "kind": "namespace",
                     "details": "Options: --corr1, --sdcrit1, --boot=N, --matrix=m, --quiet"
              },
              {
                     "trigger": "biprobit",
                     "annotation": "Bi-variate probit model",
                     "contents": "biprobit ${1:depvar1} ${2:depvar2} ${3:indepvars1} ${4:[ ; indepvars2 ]} $0",
                     "kind": "namespace",
                     "details": "Options: --vcv, --robust, --cluster=clustvar, --opg, --save-xbeta, --verbose"
              },
              {
                     "trigger": "bkw",
                     "annotation": "Collinearity test (Belsley, Kuh, Welsch)",
                     "contents": "bkw $0",
                     "kind": "namespace",
                     "details": "Options: --quiet"
              },
              {
                     "trigger": "boxplot",
                     "annotation": "Boxplot",
                     "contents": "boxplot ${1:varlist} $0",
                     "kind": "namespace",
                     "details": "Options: --notches, --factorized, --matrix=name, --output=filename, --panel"
              },
              {
                     "trigger": "catch",
                     "annotation": "Prefix to regular commands: trap errors",
                     "contents": "catch ${1:command}$0",
                     "kind": "namespace",
                     "details": "Retrieve the error code by $error afterwards"
              },
              {
                     "trigger": "chow",
                     "annotation": "Structural break test at a given split point",
                     "contents": "chow ${1:obs} $0",
                     "kind": "namespace",
                     "details": "Options: --dummy, --quiet, --limit-to-list=L"
              },
              {
                     "trigger": "clear",
                     "annotation": "Clear the current dataset etc. from memory",
                     "contents": "clear$0",
                     "kind": "namespace",
                     "details": "Options: --dataset (clear dataset only), --functions (clear functions (only))"
              },
              {
                     "trigger": "coeffsum",
                     "annotation": "Sum of coefficients",
                     "contents": "coeffsum ${1:varlist} $0",
                     "kind": "namespace",
                     "details": "Options: --quiet"
              },
              {
                     "trigger": "coint",
                     "annotation": "Engleâ€“Granger (1987) cointegration test",
                     "contents": "coint ${1:order} ${2:depvar} ${3:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --nc, --ct --ctt, --seasonals, --skip-df, --test-down, --verbose, --silent"
              },
              {
                     "trigger": "corr",
                     "annotation": "Pairwise correlation coefficients (Pearson)",
                     "contents": "corr ${1:[ varlist ]} ${2:--matrix=matname} $0",
                     "kind": "namespace",
                     "details": "Options: --uniform, --spearman --kendall, --verbose, --plot=mode-or-filename, --triangle"
              },
              {
                     "trigger": "corrgm",
                     "annotation": "(partial) autocorrelation function",
                     "contents": "corrgm ${1:[ order ]} $0",
                     "kind": "namespace",
                     "details": "Options: --bartlett, --plot=mode-or-filename, --verbose"
              },
              {
                     "trigger": "cusum",
                     "annotation": "CUSUM stability test after ols",
                     "contents": "cusum $0",
                     "kind": "namespace",
                     "details": "Options: --squares, --quiet, --plot=mode-or-filename"
              },
              {
                     "trigger": "data",
                     "annotation": "Read variables from a database file",
                     "contents": "data ${1:varlist} $0",
                     "kind": "namespace",
                     "details": "Options: --compact=method, --quiet, --name=identifier, --odbc, --no-align"
              },
              {
                     "trigger": "dataset",
                     "annotation": "Performs various operations on the data set",
                     "contents": "dataset ${1:keyword} ${2:parameter} $0",
                     "kind": "namespace",
                     "details": "Options: --panel-time, see 'help dataset' for keywords"
              },
              {
                     "trigger": "delete",
                     "annotation": "All-purpose destructor",
                     "contents": "delete ${1:varlist/-name/pkgname} $0",
                     "kind": "namespace",
                     "details": "Options: --type=type-name, --db, --force"
              },
              {
                     "trigger": "diff",
                     "annotation": "1st difference",
                     "contents": "diff ${1:varlist} $0",
                     "kind": "namespace",
                     "details": "New variable has prefix 'd_'"
              },
              {
                     "trigger": "difftest",
                     "annotation": "CUSUM stability test after ols",
                     "contents": "difftest ${1:series1} ${2:series2} $0",
                     "kind": "namespace",
                     "details": "Options: --sign, --rank-sum, --signed-rank, --verbose, --quiet"
              },
              {
                     "trigger": "discrete",
                     "annotation": "Mark variables as being discrete",
                     "contents": "discrete ${1:varlist} $0",
                     "kind": "namespace",
                     "details": "Options: --reverse"
              },
              {
                     "trigger": "dpanel",
                     "annotation": "Dynamic panel model; GMM-DIF or GMM-SYS",
                     "contents": "dpanel ${1:p} ; ${2:depvar} ${3:indepvars} ${4:[ ; instruments ]} $0",
                     "kind": "namespace",
                     "details": "Options: --quiet, --vcv, --two-step, --system, --time-dummies, --dpdstyle, --asymptotic, --keep-extra"
              },
              {
                     "trigger": "dummify",
                     "annotation": "One-hot-encoding",
                     "contents": "dummify ${1:varlist} $0",
                     "kind": "namespace",
                     "details": "Options: --drop-first, --drop-last"
              },
              {
                     "trigger": "duration",
                     "annotation": "Estimate a duration model",
                     "contents": "duration ${1:depvar} ${2:indepvars} ${3:[ ; censvar ]} $0",
                     "kind": "namespace",
                     "details": "Options: --exponential, --loglogistic, --lognormal, --medians, --robust, --cluster=clustvar, --vcv, --verbose, --quiet"
              },
              {
                     "trigger": "eqnprint",
                     "annotation": "Prints model as LaTeX equation",
                     "contents": "eqnprint $0",
                     "kind": "namespace",
                     "details": "Options: --complete. --output=filename"
              },
              {
                     "trigger": "estimate",
                     "annotation": "Specify an equation within systems",
                     "contents": "equation ${1:[ systemname ]} ${2:[ estimator ]} $0",
                     "kind": "namespace",
                     "details": "See 'help system'"
              },
              {
                     "trigger": "equation",
                     "annotation": "Calls for estimation of a system of equations",
                     "contents": "equation ${1:depvar} ${2:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --no-df-corr, --geomean, --quiet, --verbose"
              },
              {
                     "trigger": "eval",
                     "annotation": "Evaluate expression & print its value",
                     "contents": "eval ${1:expression} $0",
                     "kind": "namespace",
                     // "details": "Options: --no-df-corr, --geomean, --quiet, --verbose"
              },
              {
                     "trigger": "fcast",
                     "annotation": "Compute forecasts",
                     "contents": "fcast ${1:[startobs endobs]} ${2:[vname]} $0",
                     "kind": "namespace",
                     "details": "Options: --recursive, --dynamic, --static, --out-of-sample, --plot=filename, --no-stats, --stats-only"
              },
              {
                     "trigger": "flush",
                     "annotation": "Immediately print",
                     "contents": "flush $0",
                     "kind": "namespace",
                     //"details": ""
              },
              {
                     "trigger": "foreign",
                     "annotation": "Special mode to execute another program",
                     "contents": "foreign language=${1:language} $0",
                     "kind": "namespace",
                     "details": "Options: --send-data[=list], --quiet"
              },
              {
                     "trigger": "fractint",
                     "annotation": "Special mode to execute another program",
                     "contents": "fractint ${1:series} ${2:[ order ]} $0",
                     "kind": "namespace",
                     "details": "Options: --gph, --all, --quiet"
              },
              {
                     "trigger": "freq",
                     "annotation": "Frequency distribution",
                     "contents": "freq ${1:variable} $0",
                     "kind": "namespace",
                     "details": "Options: --nbins=n, --min=minval, --binwidth=width, --matrix=name, --plot=mode-or-filename, --normal, --gamma, --silent, --quiet"
              },
              {
                     "trigger": "funcerr",
                     "annotation": "Frequency distribution",
                     "contents": "funcerr ${1:variable} $0",
                     "kind": "namespace",
                     "details": "Options: --nbins=n, --min=minval, --binwidth=width, --matrix=name, --plot=mode-or-filename, --normal, --gamma, --silent, --quiet"
              },
              {
                     "trigger": "garch",
                     "annotation": "estimate GARCH model",
                     "contents": "garch ${1:order} ${2:depvar} ${3:[ indepvars ]} $0",
                     "kind": "namespace",
                     "details": "Options: --robust, --vcv, --nc, --stdresid, --fcp, --arma-init, --verbose, --quiet"
              },
              {
                     "trigger": "genr",
                     "annotation": "",
                     "contents": "genr ${1:newvar} = ${2:formula} $0",
                     "kind": "namespace",
                     //"details": "Options: "
              },
              {
                     "trigger": "gnuplot",
                     "annotation": "Plot",
                     "contents": "gnuplot ${1:yvars} ${2:xvar} ${3:[ dumvar ] } $0",
                     "kind": "namespace",
                     "details": "Options: see 'help gnuplot'"
              },
              {
                     "trigger": "graphpg",
                     //"annotation": "",
                     "contents": "graphpg $0",
                     "kind": "namespace",
                     "details": "Options: see 'help graphpg'"
              },
              {
                     "trigger": "hausman",
                     "annotation": "Hausman test of pooled model vs. RE/FE",
                     "contents": "hausman $0",
                     "kind": "namespace",
                     "details": "Options: --nerlove, --matrix_diff"
              },
              {
                     "trigger": "heckit",
                     "annotation": "Heckman-type selection model",
                     "contents": "heckit ${1:depvar} ${2:indepvars} ; ${3:selection equation} $0",
                     "kind": "namespace",
                     "details": "Options: --two-step, --vcv, --opg, --robust, --cluster=clustvar, --quiet, --verbose"
              },
              {
                     "trigger": "help",
                     "annotation": "Print the help",
                     "contents": "help ${1:[ functions/ command/ function]} $0",
                     "kind": "namespace",
                     "details": "Options: --func"
              },
              {
                     "trigger": "hfplot",
                     "annotation": "Plot high-frequency series, with other series",
                     "contents": "hfplot ${1:hflist} ${2:[ ; lflist ]} $0",
                     "kind": "namespace",
                     "details": "Options: --with-lines, --time-series, --output=filename/mode"
              },
              {
                     "trigger": "hsk",
                     "annotation": "Heteroskedasticity robust OLS",
                     "contents": "hsk ${1:depvar} ${2:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --no-squares, --vcv, --quiet"
              },
              {
                     "trigger": "hurst",
                     "annotation": "Calculate the Hurst exponent",
                     "contents": "hurst ${1:series} $0",
                     "kind": "namespace",
                     "details": "Options: --plot=mode-or-filename"
              },
              {
                     "trigger": "include",
                     "annotation": "Read & execute inp-/gfn file",
                     "contents": "include ${1:filename} $0",
                     "kind": "namespace",
                     "details": "Options: --force"
              },
              {
                     "trigger": "info",
                     "annotation": "Prints information stored with datafile",
                     "contents": "info $0",
                     "kind": "namespace",
                     // "details": "Options: --force"
              },
              {
                     "trigger": "intreg",
                     "annotation": "Estimate an interval regression model",
                     "contents": "intreg ${1:minvar} ${2:maxvar} ${3:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --robust, --opg, --cluster=clustvar, --quiet, --verbose"
              },
              {
                     "trigger": "johansen",
                     "annotation": "Johansen test for cointegration",
                     "contents": "johansen ${1:order} ${2:ylist} ${3:[ ; xlist ]} ${4:[ ; rxlist ]} $0",
                     "kind": "namespace",
                     "details": "Options: --nc, --rc, --uc, --crt, --ct, --seasonals, --asy, --quiet, --silent, --verbose"
              },
              {
                     "trigger": "join",
                     "annotation": "Import data",
                     "contents": "join ${1:filename} ${2:varname} $0",
                     "kind": "namespace",
                     "details": "Options: --data=name, --filter=expression, --ikey=name(s), --okey=name(s), --aggr=method, --tkey=name, --verbose"
              },
              {
                     "trigger": "kpss",
                     "annotation": "KPSS unit-root test",
                     "contents": "kpss ${1:order} ${2:varlist} $0",
                     "kind": "namespace",
                     "details": "Options: --trend, --seasonals, --quiet, --verbose"
              },
              {
                     "trigger": "lad",
                     "annotation": "Median regression minimizing sum of abs. errors",
                     "contents": "lad ${1:depvar} ${2:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --vcv, --no-vcv, --quiet"
              },
              {
                     "trigger": "lags",
                     "annotation": "Create new series with lagged values",
                     "contents": "lags ${1:[ order ;]} ${2:varlist} $0",
                     "kind": "namespace",
                     "details": "Options: --bylag"
              },
              {
                     "trigger": "ldiff",
                     "annotation": "1st difference of the natural log",
                     "contents": "ldiff ${1:varlist} $0",
                     "kind": "namespace",
                     //"details": "Options: --bylag"
              },
              {
                     "trigger": "leverage",
                     "annotation": "Compute leverage for each data point used by model",
                     "contents": "leverage $0",
                     "kind": "namespace",
                     "details": "Options: --save, --overwrite, --plot=mode-or-filename, --quiet"
              },
              {
                     "trigger": "levinlin",
                     "annotation": "Panel unit-root test by Levin, Lin & Chu (2002)",
                     "contents": "levinlin ${1:order} ${1:series} $0",
                     "kind": "namespace",
                     "details": "Options: --nc, --ct, --quiet, --verbose"
              },
              {
                     "trigger": "logistic",
                     "annotation": "Logistic regression (OLS on logistic transformation of the dependent variable)",
                     "contents": "logistic ${1:depvar} ${1:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --nc, --ct, --quiet, --verbose"
              },
              {
                     "trigger": "logit",
                     "annotation": "Estimate logit model by Maximum-Likelihood",
                     "contents": "logit ${1:depvar} ${1:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --robust, --cluster=clustvar, --multinomial, --vcv, --p-values, --estrella, --quiet, --verbose"
              },
              {
                     "trigger": "logs",
                     "annotation": "Create series of natural log; prefix: 'l//_'",
                     "contents": "logs ${1:varlist} $0",
                     "kind": "namespace",
                     "details": "Options: --robust, --cluster=clustvar, --multinomial, --vcv, --p-values, --estrella, --quiet, --verbose"
              },
              {
                     "trigger": "mahal",
                     "annotation": "Mahalanobis distances between the series",
                     "contents": "mahal ${1:varlist} $0",
                     "kind": "namespace",
                     "details": "Options: --save, --vcv, --quiet"
              },
              {
                     "trigger": "makepkg",
                     "annotation": "Create gretl function package via CLI",
                     "contents": "makepkg ${1:filename} $0",
                     "kind": "namespace",
                     "details": "Options: --index, --translations, --quiet"
              },
              {
                     "trigger": "markers",
                     "annotation": "create or store observation markers",
                     "contents": "markers ${1:filename} $0",
                     "kind": "namespace",
                     "details": "Options: --to-file=filename, --to-array=name, --from-file=filename, --delete"
              },
              {
                     "trigger": "markers",
                     "annotation": "create or store observation markers",
                     "contents": "markers ${1:filename} $0",
                     "kind": "namespace",
                     "details": "Options: --to-file=filename, --to-array=name, --from-file=filename, --delete"
              },
              {
                     "trigger": "meantest",
                     "annotation": "Test for equal population means",
                     "contents": "meantest ${1:series1} ${2:series2} $0",
                     "kind": "namespace",
                     "details": "Options: --unequal-vars"
              },
              {
                     "trigger": "midasreg",
                     "annotation": "Least-squares estimation of a MIDAS model.",
                     "contents": "midasreg ${1:depvar} ${2:indepvars} ; ${3:MIDAS-terms} $0",
                     "kind": "namespace",
                     "details": "Options: --vcv, --robust, --quiet"
              },
              {
                     "trigger": "midasreg",
                     "annotation": "Least-squares estimation of a MIDAS model.",
                     "contents": "midasreg ${1:depvar} ${2:indepvars} ; ${3:MIDAS-terms} $0",
                     "kind": "namespace",
                     "details": "Options: --vcv, --robust, --quiet"
              },
              {
                     "trigger": "modeltab",
                     "annotation": "Manipulates the gretl 'model table'",
                     "contents": "modeltab ${1:add/show/free} $0",
                     "kind": "namespace",
                     "details": "Options: --output=filename"
              },
              {
                     "trigger": "modprint",
                     "annotation": "Print coefficient table & statistics 'by hand'",
                     "contents": "modprint ${1:coeffmat} ${2:names} ${3:[ addstats ]} $0",
                     "kind": "namespace",
                     "details": "Options: --output=filename"
              },
              {
                     "trigger": "modtest",
                     "annotation": "Print coefficient table & statistics 'by hand'",
                     "contents": "modtest ${1:[ order ]} $0",
                     "kind": "namespace",
                     "details": "Options: --normality, --autocorr, --white, --white-nocross, --breusch-pagan, --robust, --arch, --panel, --comfac, --xdepend, --logs, --squares, --quiet, --silent"
              },
              {
                     "trigger": "mpols",
                     "annotation": "OLS estimates using multiple precision floating-point arithmetic",
                     "contents": "mpols ${1:depvar} ${2:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --vcv, --simple-print, --quiet"
              },
              {
                     "trigger": "negbin",
                     "annotation": "OLS estimates using multiple precision floating-point arithmetic",
                     "contents": "negbin ${1:depvar} ${2:indepvars} ${3:[ ; offset ]} $0",
                     "kind": "namespace",
                     "details": "Options: --vcv, --model1, --robust, --cluster=clustvar, --opg, --verbose, --quiet"
              },
              {
                     "trigger": "normtest",
                     "annotation": "Perform test on normality",
                     "contents": "normtest ${1:series} $0",
                     "kind": "namespace",
                     "details": "Options: --dhansen, --swilk, --lillie, --jbera, --all, --quiet"
              },
              {
                     "trigger": "nulldata",
                     "annotation": "Create a 'blank' data set",
                     "contents": "nulldata ${1:series_length} $0",
                     "kind": "namespace",
                     "details": "Options: --preserve"
              },
              {
                     "trigger": "ols",
                     "annotation": "OLS estimation",
                     "contents": "ols ${1:depvars} ${2:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --vcv, --robust, --cluster=clustvar, --jackknife, --simple-print, --quiet, --anova, --no-df-corr"
              },
              {
                     "trigger": "omit",
                     "annotation": "Test omission of series from model OR G2S variable selection",
                     "contents": "omit ${1:varlist} $0",
                     "kind": "namespace",
                     "details": "Options: --test-only, --chi-square, --auto[=alpha], --vcv, --quiet, --silent"
              },
              {
                     "trigger": "open",
                     "annotation": "Opens a data file or database",
                     "contents": "open ${1:filename} $0",
                     "kind": "namespace",
                     "details": "Options: --select=selection, --frompkg=pkgname, --www, --odbc, --all-cols, --fixed_cols=IDs, --preserve, --quiet"
              },
              {
                     "trigger": "orthdev",
                     "annotation": "Create panel series of forward orthogonal deviations; prefix 'o_'",
                     "contents": "orthdev ${1:varlist} $0",
                     "kind": "namespace",
                     //"details": "Options: "
              },
              {
                     "trigger": "panel",
                     "annotation": "Create panel series of forward orthogonal deviations; prefix 'o_'",
                     "contents": "panel ${1:depvar} ${2:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --fixed-effects, --random-effects, --pooled, --between, --nerlove, --robust, --time-dummies, --unit-weights, --iterate, --matrix-diff, --unbalanced=method, --quiet, --verbose"
              },
              {
                     "trigger": "panplot",
                     "annotation": "Plotting specific to panel data",
                     "contents": "panel ${1:series} $0",
                     "kind": "namespace",
                     "details": "Options: --means, --overlay, --sequence, --grid, --stack, --boxplots, --boxplot, --output=filename"
              },
              {
                     "trigger": "pca",
                     "annotation": "Principal Components Analysis",
                     "contents": "pca ${1:varlist} $0",
                     "kind": "namespace",
                     "details": "Options: --covariance, --save[=n], --save-all, --quiet"
              },
              {
                     "trigger": "pergm",
                     "annotation": "Computes & displays spectrum of series",
                     "contents": "pergm ${1:series} ${2:[ bandwidth ]} $0",
                     "kind": "namespace",
                     "details": "Options: --bartlett, --log, --radians, --plot=mode-or-filename"
              },
              {
                     "trigger": "pkg",
                     "annotation": "Work with gretl function packages",
                     "contents": "pkg ${1:install/query/unload/remove/index} ${2:pkgname} $0",
                     "kind": "namespace",
                     "details": "Options: --local, --verbose, --quiet"
              },
              {
                     "trigger": "plot",
                     "annotation": "Work with gretl function packages",
                     "contents": "plot ${1:[ data ]} $0",
                     "kind": "namespace",
                     "details": "Options: --with-lines[=varspec], --with-lp[=varspec], --with-impulses[=varspec], --with-steps[=varspec], --time-series, --single-yaxis, --ylogscale[=base], --dummy, --fit=fitspec, --band=bandspec, --band-style=style, --output=filename"
              },
              {
                     "trigger": "poisson",
                     "annotation": "Work with gretl function packages",
                     "contents": "pkg ${1:depvar} ${2:indepvars} ${3:[ ; offset ]} $0",
                     "kind": "namespace",
                     "details": "Options: --robust, --cluster=clustvar, --vcv, --verbose, --quiet"
              },
              {
                     "trigger": "poisson",
                     "annotation": "Work with gretl function packages",
                     "contents": "pkg ${1:depvar} ${2:indepvars} ${3:[ ; offset ]} $0",
                     "kind": "namespace",
                     "details": "Options: --robust, --cluster=clustvar, --vcv, --verbose, --quiet"
              },
              {
                     "trigger": "print",
                     "annotation": "Work with gretl function packages",
                     "contents": "print ${1:varlist/object-names/string-literal}$0",
                     "kind": "namespace",
                     "details": "Options: --byobs, --no-dates, --range=start:stop, --midas, --tree"
              },
              {
                     "trigger": "printf",
                     "annotation": "Print with format control",
                     "contents": "printf ${1:format} ${2:, arguments} $0",
                     "kind": "namespace",
                     "details": "See 'help printf'"
              },
              {
                     "trigger": "probit",
                     "annotation": "Estimate probit model",
                     "contents": "probit ${1:depvar} ${2:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --robust, --cluster=clustvar, --vcv, --p-values, --estrella, --random-effects, --quadpoints=k, --verbose, --quiet"
              },
              {
                     "trigger": "pvalue",
                     "annotation": "Area to the right of x in the specified distribution",
                     "contents": "pvalue ${1:distribution} ${2:[ params ]} ${3: xvalue} $0",
                     "kind": "namespace",
                     "details": "See 'help pvalue'"
              },
              {
                     "trigger": "pvalue",
                     "annotation": "Area to the right of x in the specified distribution",
                     "contents": "pvalue ${1:distribution} ${2:[ params ]} ${3: xvalue} $0",
                     "kind": "namespace",
                     "details": "See 'help pvalue'"
              },
              {
                     "trigger": "qlrtest",
                     "annotation": "Quandt likelihood ratio test (after OLS TS model)",
                     "contents": "qlrtest $0",
                     "kind": "namespace",
                     "details": "Options: --limit-to=list, --plot=mode-or-filename, --quiet"
              },
              {
                     "trigger": "qqplot",
                     "annotation": "Quandt likelihood ratio test (after OLS TS model)",
                     "contents": "qqplot ${1:series1} ${2:[ series2 ]} $0",
                     "kind": "namespace",
                     "details": "Options: --z-scores, --raw, --output=filename"
              },
              {
                     "trigger": "quantreg",
                     "annotation": "Quantile regression",
                     "contents": "quantreg ${1:tau} ${2:depvar} ${3:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --robust, --intervals[=level], --vcv, --quiet"
              },
              {
                     "trigger": "quit",
                     "annotation": "Exits from gretl's current modality",
                     "contents": "quit $0",
                     "kind": "namespace",
                     "details": "See 'help quit'"
              },
              {
                     "trigger": "rename",
                     "annotation": "Rename a series",
                     "contents": "rename ${1:series-name} ${2:newname}  $0",
                     "kind": "namespace",
                     "details": "Options: --quiet"
              },
              {
                     "trigger": "reset",
                     "annotation": "Ramsey's RESET test after OLS regression",
                     "contents": "reset $0",
                     "kind": "namespace",
                     "details": "Options: --squares-only, --cubes-only, --silent, --quiet"
              },
              {
                     "trigger": "reset",
                     "annotation": "Ramsey's RESET test after OLS regression",
                     "contents": "reset $0",
                     "kind": "namespace",
                     "details": "Options: --squares-only, --cubes-only, --silent, --quiet"
              },
              {
                     "trigger": "rmplot",
                     "annotation": "Rangeâ€“mean plot",
                     "contents": "rmplot ${1:series} $0",
                     "kind": "namespace",
                     "details": "Options: --trim, --quiet, --output=filename"
              },
              {
                     "trigger": "run",
                     "annotation": "Executes the commands in filename then returns control to the interactive prompt",
                     "contents": "run ${1:filename} $0",
                     "kind": "namespace",
                     //"details": "Options: --trim, --quiet, --output=filename"
              },
              {
                     "trigger": "runs",
                     "annotation": "Nonparametric 'runs' test for randomness",
                     "contents": "runs ${1:series} $0",
                     "kind": "namespace",
                     "details": "Options: --difference, --equal"
              },
              {
                     "trigger": "scatters",
                     "annotation": "Pairwise graphs of yvar against all the variables in xvars, or vice versa",
                     "contents": "scatters ${1:yvar} ${2: ; xvars/yvars} ${3: ; xvar} $0",
                     "kind": "namespace",
                     "details": "Options: --with-lines, --matrix=name, --output=filename/mode"
              },
              {
                     "trigger": "sdiff",
                     "annotation": "Create seasonal difference of each series; prefix 'sd_'",
                     "contents": "sdiff ${1:varlist} $0",
                     "kind": "namespace",
                     //"details": "Options: --with-lines, --matrix=name, --output=filename/mode"
              },
              {
                     "trigger": "set",
                     "annotation": "Set global parameters",
                     "contents": "set ${1:variable} ${2:value} $0",
                     "kind": "namespace",
                     "details": "See 'help set'"
              },
              {
                     "trigger": "setinfo",
                     "annotation": "Set meta-information for series",
                     "contents": "setinfo ${1:series} $0",
                     "kind": "namespace",
                     "details": "Options: --description=string, --graph-name=string, --discrete, --continuous, --coded, --numeric, --midas"
              },
              {
                     "trigger": "setmiss",
                     "annotation": "Set value as a code for 'missing'",
                     "contents": "setmiss ${1:value} ${2:[ varlist ]} $0",
                     "kind": "namespace",
                     //"details": "Options:"
              },
              {
                     "trigger": "setobs",
                     "annotation": "Specify structure of current dataset",
                     "contents": "setobs ${1:periodicity/unitvar} ${2:startobs/timevar} ${3:/--panel-vars} $0",
                     "kind": "namespace",
                     "details": "Options: --cross-section, --time-series, --special-time-series, --stacked-cross-section, --stacked-time-series, --panel-vars, --panel-time, --panel-groups"
              },
              {
                     "trigger": "setopt",
                     "annotation": "Pre-set options for a specified command.",
                     "contents": "setopt ${1:command} ${2:[ action ]} ${3:options} $0",
                     "kind": "namespace",
                     "details": "See 'help setopt'"
              },
              {
                     "trigger": "shell",
                     "annotation": "Execute shell commands",
                     "contents": "shell ${1:shellcommand} $0",
                     "kind": "namespace",
                     "details": "See 'help shell'"
              },
              {
                     "trigger": "smpl",
                     "annotation": "Manipulate the sample range",
                     "contents": "smpl ${1:start} ${2:end} $0",
                     "kind": "namespace",
                     "details": "See 'help smpl'"
              },
              {
                     "trigger": "spearman",
                     "annotation": "Manipulate the sample range",
                     "contents": "spearman ${1:series1} ${2:series2} $0",
                     "kind": "namespace",
                     "details": "Options: --verbose"
              },
              {
                     "trigger": "square",
                     "annotation": "Create squares (+cross-products) of series",
                     "contents": "square ${1:varlist} $0",
                     "kind": "namespace",
                     "details": "prefix 'sq_'; Options: --cross"
              },
              {
                     "trigger": "stdize",
                     "annotation": "Create standardized series",
                     "contents": "stdize ${1:varlist} $0",
                     "kind": "namespace",
                     "details": "prefix 's_' ('c_'); Options: --no-df-corr, --center-only"
              },
              {
                     "trigger": "store",
                     "annotation": "Create standardized series",
                     "contents": "store ${1:filename} ${2:[ varlist ]} $0",
                     "kind": "namespace",
                     "details": "Options: --matrix=matrix-name, --gzipped[=level], --omit-obs, --compat etc."
              },
              {
                     "trigger": "summary",
                     "annotation": "Create standardized series",
                     "contents": "summary ${1:[ varlist ] / --matrix=matname} $0",
                     "kind": "namespace",
                     "details": "Options: --simple, --weight=wvar, --by=byvar"
              },
              {
                     "trigger": "summary",
                     "annotation": "Create standardized series",
                     "contents": "summary ${1:[ varlist ] / --matrix=matname} $0",
                     "kind": "namespace",
                     "details": "Options: --simple, --weight=wvar, --by=byvar"
              },
              {
                     "trigger": "tabprint",
                     "annotation": "Print the model in tabular form",
                     "contents": "tabprint $0",
                     "kind": "namespace",
                     "details": "Options: --output=filename, --format='f1|f2|f3|f4', --complete"
              },
              {
                     "trigger": "textplot",
                     "annotation": "Quick and simple ASCII graphics",
                     "contents": "textplot ${1:varlist} $0",
                     "kind": "namespace",
                     "details": "Options: --time-series, --one-scale, --tall"
              },
              {
                     "trigger": "tobit",
                     "annotation": "Quick and simple ASCII graphics",
                     "contents": "tobit ${1:depvar} ${2:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --llimit=lval, --rlimit=rval, --vcv, --robust, --opg, --cluster=clustvar, --verbose, --quiet"
              },
              {
                     "trigger": "tsls",
                     "annotation": "Instrumental variables (IV) estimates",
                     "contents": "tsls ${1:depvar} ${2:indepvars} ${3:; instruments} $0",
                     "kind": "namespace",
                     "details": "Options: --no-tests, --vcv, --robust, --no-df-corr, --cluster=clustvar, --liml, --gmm, --verbose, --quiet"
              },
              {
                     "trigger": "var",
                     "annotation": "VAR (using OLS) model estimation",
                     "contents": "var ${1:ylist} ${2:xlist} ${3:[ ; xlist ]} $0",
                     "kind": "namespace",
                     "details": "Options: --nc, --trend, --seasonals, --robust, --robust-hac, --impulse-responses, --variance-decomp, --lagselect, --quiet, --silent"
              },
              {
                     "trigger": "varlist",
                     "annotation": "Print listing of the series (or any object) in memory",
                     "contents": "varlist $0",
                     "kind": "namespace",
                     "details": "Options: --type=typename"
              },
              {
                     "trigger": "vartest",
                     "annotation": "Test the null hypothesis of equal population variances",
                     "contents": "vartest ${1:series1} ${2:series2} $0",
                     "kind": "namespace",
                     //"details": "Options: --type=typename"
              },
              {
                     "trigger": "vecm",
                     "annotation": "Test the null hypothesis of equal population variances",
                     "contents": "vecm ${1:order} ${2:rank} ${3:ylist} ${4:[ ; xlist ]} ${5:[ ; rxlist ]} $0",
                     "kind": "namespace",
                     "details": "Options: --nc, --rc, --uc, --crt, --ct, --seasonals, --impulse-responses, --variance-decomp, --quiet, --silent"
              },
              {
                     "trigger": "vif",
                     "annotation": "Collinearity diagnostics (after estimation)",
                     "contents": "vif $0",
                     "kind": "namespace",
                     "details": "Options: --quiet"
              },
              {
                     "trigger": "wls",
                     "annotation": "Collinearity diagnostics (after estimation)",
                     "contents": "wls ${1:wtvar} ${2:depvar} ${3:indepvars} $0",
                     "kind": "namespace",
                     "details": "Options: --vcv, --robust, --allow-zeros, --quiet"
              },
              {
                     "trigger": "xcorrgm",
                     "annotation": "Print & graph cross-correlogram",
                     "contents": "xcorrgm ${1:series1} ${2:series2} ${3:[ order ]} $0",
                     "kind": "namespace",
                     "details": "Options: --plot=mode-or-filename, --quiet"
              },
              {
                     "trigger": "xtab",
                     "annotation": "Contingency table or cross-tabulation",
                     "contents": "xtab ${1:ylist} ${2:[ ; xlist ]} $0",
                     "kind": "namespace",
                     "details": "Options: --row, --column, --zeros, --no-totals, --matrix=matname, --equal, --tex[=filename], --quiet"
              },


               // Gretl accessors
              {
                     "trigger": "ahat",
                     "annotation": "retrieve series of fixed/random-effects",
                     "contents": "\\$ahat $0",
                     "kind": "variable",
                     "details": "scalar, See 'help $ahat'"
              },
              {
                     "trigger": "aic",
                     "annotation": "AIC value",
                     "contents": "\\$aic $0",
                     "kind": "variable",
                     "details": "scalar, See 'help $aic'"
              },
              {
                     "trigger": "bic",
                     "annotation": "BIC value",
                     "contents": "\\$bic $0",
                     "kind": "variable",
                     "details": "scalar, See 'help $bic'"
              },
              {
                     "trigger": "chisq",
                     "annotation": "chi-square statistic",
                     "contents": "\\$chisq $0",
                     "kind": "variable",
                     "details": "scalar, See 'help $chisq'"
              },
              {
                     "trigger": "coeff",
                     "annotation": "coefficient matrix",
                     "contents": "\\$coeff $0",
                     "kind": "variable",
                     "details": "matrix, See 'help $coeff'"
              },
              {
                     "trigger": "command",
                     "annotation": "cmd of last model estimated",
                     "contents": "\\$command $0",
                     "kind": "variable",
                     "details": "str, See 'help $command'"
              },
              {
                     "trigger": "compan",
                     "annotation": "companian matrix",
                     "contents": "\\$compan $0",
                     "kind": "variable",
                     "details": "matrix, See 'help $compan'"
              },
              {
                     "trigger": "datatype",
                     "annotation": "Datatype dataset",
                     "contents": "\\$datatype $0",
                     "kind": "variable",
                     "details": "int, 1=cross-section, 2=time-series, 3=panel"
              },
              {
                     "trigger": "depvar",
                     "annotation": "Name of dependent var.",
                     "contents": "\\$depvar $0",
                     "kind": "variable",
                     "details": "str, See 'help $depvar'"
              },
              {
                     "trigger": "df",
                     "annotation": "Degrees of freedom",
                     "contents": "\\$df $0",
                     "kind": "variable",
                     "details": "int, See 'help $df'"
              },
              {
                     "trigger": "diagpval",
                     "annotation": "P-value associated $diagtest stats",
                     "contents": "\\$diagpval $0",
                     "kind": "variable",
                     "details": "scalar, Must follow a system of eq."
              },
              {
                     "trigger": "diagtest",
                     "annotation": "Test stats for H0: cross-equation cov-mat matrix is diagonal",
                     "contents": "\\$diagtest $0",
                     "kind": "variable",
                     "details": "scalar, Must follow a system of eq."
              },
              {
                     "trigger": "dotdir",
                     "annotation": "path where temporary files are stored",
                     "contents": "\\$dotdir $0",
                     "kind": "variable",
                     "details": "str, Set it by 'set dotdir <PATH>'"
              },
              {
                     "trigger": "dw",
                     "annotation": "Durbinâ€“Watson statistic",
                     "contents": "\\$dotdir $0",
                     "kind": "variable",
                     "details": "scalar, 1st serial correlation test stat."
              },
              {
                     "trigger": "dwpval",
                     "annotation": "P-value of Durbinâ€“Watson statistic",
                     "contents": "\\$dotdir $0",
                     "kind": "variable",
                     "details": "scalar, CDF of the DW distribution evaluated"
              },
              {
                     "trigger": "ec",
                     "annotation": "error correction terms of VECM",
                     "contents": "\\$ec $0",
                     "kind": "variable",
                     "details": "matrix, rows = number of obs. used; columns = cointegration rank of the system"
              },
              {
                     "trigger": "error",
                     "annotation": "internal error code",
                     "contents": "\\$error $0",
                     "kind": "variable",
                     "details": "int, Error trapped by 'catch' cmd"
              },
              {
                     "trigger": "ess",
                     "annotation": "error sum of squares",
                     "contents": "\\$ess $0",
                     "kind": "variable",
                     "details": "scalar, See 'help ess'"
              },
              {
                     "trigger": "evals",
                     "annotation": "eigenvalues used for trace test for cointegration",
                     "contents": "\\$evals $0",
                     "kind": "variable",
                     "details": "matrix, Must follow the estimation of a VECM"
              },
              {
                     "trigger": "fcast",
                     "annotation": "forecast values",
                     "contents": "\\$fcast $0",
                     "kind": "variable",
                     "details": "matrix, Must follow the fcast cmd"
              },
              {
                     "trigger": "fcse",
                     "annotation": "std. errors of forecasts",
                     "contents": "\\$fcse $0",
                     "kind": "variable",
                     "details": "matrix, Must follow the fcast cmd"
              },
              {
                     "trigger": "fevd",
                     "annotation": "forecast error variance decomp.",
                     "contents": "\\$fevd $0",
                     "kind": "variable",
                     "details": "matrix, Must follow estimation of a VAR"
              },
              {
                     "trigger": "Fstat",
                     "annotation": "overall F-statistic",
                     "contents": "\\$Fstat $0",
                     "kind": "variable",
                     "details": "scalar, from last model"
              },
              {
                     "trigger": "gmmcrit",
                     "annotation": "value of the GMM objective function",
                     "contents": "\\$gmmcrit $0",
                     "kind": "variable",
                     "details": "scalar, Must follow a gmm block"
              },
              {
                     "trigger": "h",
                     "annotation": "estim. conditional variance",
                     "contents": "\\$h $0",
                     "kind": "variable",
                     "details": "series, Must follow the garch cmd"
              },
              {
                     "trigger": "hausman",
                     "annotation": "estim. conditional variance",
                     "contents": "\\$hausman $0",
                     "kind": "variable",
                     "details": "matrix, after tsls/ panel with random effects"
              },
              {
                     "trigger": "hqc",
                     "annotation": "HQC value",
                     "contents": "\\$hqc $0",
                     "kind": "variable",
                     "details": "scalar, Hannan-Quinn Information Criterion"
              },
              {
                     "trigger": "huge",
                     "annotation": "very large positive number",
                     "contents": "\\$huge $0",
                     "kind": "variable",
                     "details": "scalar, See also 'set' cmd"
              },
              {
                     "trigger": "jalpha",
                     "annotation": "loadings matrix (Johansen)",
                     "contents": "\\$jalpha $0",
                     "kind": "variable",
                     "details": "matrix, Must follow a VECM estimation"
              },
              {
                     "trigger": "jbeta",
                     "annotation": "cointegration matrix (Johansen)",
                     "contents": "\\$jbeta $0",
                     "kind": "variable",
                     "details": "matrix, Must follow a VECM estimation"
              },
              {
                     "trigger": "jvbeta",
                     "annotation": "covariance matrix (Johansen)",
                     "contents": "\\$jvbeta $0",
                     "kind": "variable",
                     "details": "matrix, Must follow a VECM estimation"
              },
              {
                     "trigger": "lang",
                     "annotation": "national language in force",
                     "contents": "\\$lang $0",
                     "kind": "variable",
                     "details": "string, 'help $lang'"
              },
              {
                     "trigger": "llt",
                     "annotation": "per-observation log-likelihood value",
                     "contents": "\\$llt $0",
                     "kind": "variable",
                     "details": "series, 'help $llt'"
              },
              {
                     "trigger": "lnl",
                     "annotation": "log-likelihood last model",
                     "contents": "\\$lnl $0",
                     "kind": "variable",
                     "details": "scalar, of last estimated model"
              },
              {
                     "trigger": "macheps",
                     "annotation": "machine epsilon",
                     "contents": "\\$macheps $0",
                     "kind": "variable",
                     "details": "scalar, 'help $macheps'"
              },
              {
                     "trigger": "mapfile",
                     "annotation": "file containing the map polygons",
                     "contents": "\\$mapfile $0",
                     "kind": "variable",
                     "details": "string, See 'help $mapfile'"
              },
              {
                     "trigger": "mnlprobs",
                     "annotation": "estimated probabilities of each outcome",
                     "contents": "\\$mnlprobs $0",
                     "kind": "variable",
                     "details": "scalar, Only for multinomial logit model"
              },
              {
                     "trigger": "model",
                     "annotation": "model object",
                     "contents": "\\$model $0",
                     "kind": "variable",
                     "details": "bundle, Only for single-equation model"
              },
              {
                     "trigger": "mpirank",
                     "annotation": "0-based rank or ID number of the current process",
                     "contents": "\\$mpirank $0",
                     "kind": "variable",
                     "details": "int, only with MPI support"
              },
              {
                     "trigger": "ncoeff",
                     "annotation": "number of coefficients estimated",
                     "contents": "\\$ncoeff $0",
                     "kind": "variable",
                     "details": "int, Value for last model estimated"
              },
              {
                     "trigger": "nobs",
                     "annotation": "number of observations",
                     "contents": "\\$nobs $0",
                     "kind": "variable",
                     "details": "int, returns N*T for a panel"
              },
              {
                     "trigger": "now",
                     "annotation": "Current time",
                     "contents": "\\$now $0",
                     "kind": "variable",
                     "details": "matrix, see 'help $now'"
              },
              {
                     "trigger": "nvars",
                     "annotation": "number of series in the dataset",
                     "contents": "\\$nvars $0",
                     "kind": "variable",
                     "details": "int, returns 0 if only constant exists"
              },
              {
                     "trigger": "obsdate",
                     "annotation": "date series (YYYYMMDD)",
                     "contents": "\\$obsdate $0",
                     "kind": "variable",
                     "details": "series, ISO 8601 basic date format"
              },
              {
                     "trigger": "obsmajor",
                     "annotation": "low-frequency obs. component",
                     "contents": "\\$obsmajor $0",
                     "kind": "variable",
                     "details": "series, year for annual/quarterly/monthly, day: hours"
              },
              {
                     "trigger": "obsmicro",
                     "annotation": "highest-frequency obs. component",
                     "contents": "\\$obsmicro $0",
                     "kind": "variable",
                     "details": "series, see 'help $obsmicro'"
              },
              {
                     "trigger": "obsminor",
                     "annotation": "medium-frequency obs. component",
                     "contents": "\\$obsminor $0",
                     "kind": "variable",
                     "details": "series, see 'help $obsminor'"
              },
              {
                     "trigger": "parnames",
                     "annotation": "names of the model's parameters",
                     "contents": "\\$parnames $0",
                     "kind": "variable",
                     "details": "strings, see also varnames()"
              },
              {
                     "trigger": "pd",
                     "annotation": "frequency or periodicity of the data",
                     "contents": "\\$pd $0",
                     "kind": "variable",
                     "details": "int, For panel data: time-series length"
              },
              {
                     "trigger": "pi",
                     "annotation": "value of pi in double precision",
                     "contents": "\\$pi $0",
                     "kind": "variable",
                     "details": "scalar"
              },
              {
                     "trigger": "pkgdir",
                     "annotation": "full path of installed package",
                     "contents": "\\$pkgdir $0",
                     "kind": "variable",
                     "details": "string, see 'help $pkgdir'"
              },
              {
                     "trigger": "pvalue",
                     "annotation": "p-value of the last hypothesis-test",
                     "contents": "\\$pvalue $0",
                     "kind": "variable",
                     "details": "scalar or matrix, See 'help $pvalue'"
              },
              {
                     "trigger": "qlrbreak",
                     "annotation": "observation index of break point",
                     "contents": "\\$qlrbreak $0",
                     "kind": "variable",
                     "details": "scalar, QLR break test 'help $qlrbreak'"
              },
              {
                     "trigger": "result",
                     "annotation": "Stored information of commands",
                     "contents": "\\$result $0",
                     "kind": "variable",
                     "details": "bundle, see 'help $result'"
              },
              {
                     "trigger": "rho",
                     "annotation": "1st-order AR coefficient",
                     "contents": "\\$rho $0",
                     "kind": "variable",
                     "details": "scalar"
              },
              {
                     "trigger": "rsq",
                     "annotation": "un-adjusted R2 last model",
                     "contents": "\\$rsq $0",
                     "kind": "variable",
                     "details": "scalar"
              },
              {
                     "trigger": "sample",
                     "annotation": "Flag observations used in estimation",
                     "contents": "\\$sample $0",
                     "kind": "variable",
                     "details": "series"
              },
              {
                     "trigger": "saragan",
                     "annotation": "Sargan test results",
                     "contents": "\\$saragan $0",
                     "kind": "variable",
                     "details": "matrix, see 'help $sargan'"
              },
              {
                     "trigger": "seed",
                     "annotation": "Value of gretl's RNG",
                     "contents": "\\$seed $0",
                     "kind": "variable",
                     "details": "int"
              },
              {
                     "trigger": "sigma",
                     "annotation": "Std. error or cross-eq. covar. matrix",
                     "contents": "\\$sigma $0",
                     "kind": "variable",
                     "details": "scalar or matrix, see 'help $sigma'"
              },
              {
                     "trigger": "stderr",
                     "annotation": "Std. error of the coefficients",
                     "contents": "\\$stderr $0",
                     "kind": "variable",
                     "details": "scalar or matrix, see 'help $stderr'"
              },
              {
                     "trigger": "stopwatch",
                     "annotation": "value of CPU time",
                     "contents": "\\$stopwatch $0",
                     "kind": "variable",
                     "details": "scalar, see 'help $stopwatch'"
              },
              {
                     "trigger": "sysA",
                     "annotation": "coeff. lagged endogenous system variables",
                     "contents": "\\$sysA $0",
                     "kind": "variable",
                     "details": "matrix, see 'help $sysA'"
              },
              {
                     "trigger": "sysB",
                     "annotation": "coeff. exogenous structural form",
                     "contents": "\\$sysB $0",
                     "kind": "variable",
                     "details": "matrix, see 'help $sysB'"
              },
              {
                     "trigger": "sysGamma",
                     "annotation": "coeff. of contemporaneous endogenous",
                     "contents": "\\$sysGamma $0",
                     "kind": "variable",
                     "details": "matrix, see 'help $sysGamma'"
              },
              {
                     "trigger": "sysinfo",
                     "annotation": "System information",
                     "contents": "\\$sysinfo $0",
                     "kind": "variable",
                     "details": "bundle, see 'help $sysinfo'"
              },
              {
                     "trigger": "system",
                     "annotation": "Information on system estimation",
                     "contents": "\\$system $0",
                     "kind": "variable",
                     "details": "bundle, see 'help $system'"
              },
              {
                     "trigger": "T",
                     "annotation": "number of obs. used for estimation",
                     "contents": "\\$T $0",
                     "kind": "variable",
                     "details": "int, see 'help $T'"
              },
              {
                     "trigger": "t1",
                     "annotation": "index of the 1st obs. in selected sample",
                     "contents": "\\$t1 $0",
                     "kind": "variable",
                     "details": "int, see 'help $t1'"
              },
              {
                     "trigger": "t2",
                     "annotation": "index of the last obs. in selected sample",
                     "contents": "\\$t2 $0",
                     "kind": "variable",
                     "details": "int, see 'help $t2'"
              },
              {
                     "trigger": "test",
                     "annotation": "Test statistic",
                     "contents": "\\$test $0",
                     "kind": "variable",
                     "details": "scalar, see 'help $test'"
              },
              {
                     "trigger": "tmax",
                     "annotation": "index for the end of the selected sample",
                     "contents": "\\$tmax $0",
                     "kind": "variable",
                     "details": "int, see 'help $tmax'"
              },
              {
                     "trigger": "trsq",
                     "annotation": "sample size times R-squared",
                     "contents": "\\$trsq $0",
                     "kind": "variable",
                     "details": "scalar"
              },
              {
                     "trigger": "uhat",
                     "annotation": "residuals from the last model",
                     "contents": "\\$uhat $0",
                     "kind": "variable",
                     "details": "series, See 'help $uhat'"
              },
              {
                     "trigger": "unit",
                     "annotation": "Identifier for panel units",
                     "contents": "\\$uhat $0",
                     "kind": "variable",
                     "details": "series, See 'help $unit'"
              },
              {
                     "trigger": "vcv",
                     "annotation": "covariance for coefficients",
                     "contents": "\\$vcv $0",
                     "kind": "variable",
                     "details": "matrix, See 'help $vcv'"
              },
              {
                     "trigger": "vcv",
                     "annotation": "covariance for coefficients",
                     "contents": "\\$vcv $0",
                     "kind": "variable",
                     "details": "matrix, See 'help $vcv'"
              },
              {
                     "trigger": "vecGamma",
                     "annotation": "VECM Gamma matrices",
                     "contents": "\\$vecGamma $0",
                     "kind": "variable",
                     "details": "matrix, See 'help $vecGamma'"
              },
              {
                     "trigger": "version",
                     "annotation": "gretl program version",
                     "contents": "\\$version $0",
                     "kind": "variable",
                     "details": "int, See 'help $version'"
              },
              {
                     "trigger": "vma",
                     "annotation": "VAR/ VECM VMA representation",
                     "contents": "\\$vma $0",
                     "kind": "variable",
                     "details": "matrix, See 'help $vma'"
              },
              {
                     "trigger": "windows",
                     "annotation": "gretl runs on Windows",
                     "contents": "\\$windows $0",
                     "kind": "variable",
                     "details": "bool, See 'help $windows'"
              },
              {
                     "trigger": "workdir",
                     "annotation": "Full path working directory",
                     "contents": "\\$workdir $0",
                     "kind": "variable",
                     "details": "string, See 'help $workdir'"
              },
              {
                     "trigger": "xlist",
                     "annotation": "list of regressors of last model estimated",
                     "contents": "\\$xlist $0",
                     "kind": "variable",
                     "details": "matrix, See 'help $xlist'"
              },
              {
                     "trigger": "xtxinv",
                     "annotation": "X'X^-1 for VAR or VECM",
                     "contents": "\\$xtxinv $0",
                     "kind": "variable",
                     "details": "matrix, See 'help $xtxinv'"
              },
              {
                     "trigger": "yhat",
                     "annotation": "fitted values from last regression",
                     "contents": "\\$yhat $0",
                     "kind": "variable",
                     "details": "series"
              },
              {
                     "trigger": "ylist",
                     "annotation": "list of endogenous for systems",
                     "contents": "\\$ylist $0",
                     "kind": "variable",
                     "details": "series"
              },

                // data types
              {
                     "trigger": "bool",
                     "annotation": "Boolean",
                     "kind": "type",
                     "details": "boolean datatype"
              },
              {
                     "trigger": "bundle",
                     "annotation": "Bundle",
                     "kind": "type",
                     "details": "See 'help defbundle'"
              },
              {
                     "trigger": "bundles",
                     "annotation": "Bundles",
                     "kind": "type",
                     "details": "See 'help array'"
              },
              {
                     "trigger": "int",
                     "annotation": "integer datatype",
                     "kind": "type",
                     "details": "See 'help function'"
              },
              {
                     "trigger": "list",
                     "annotation": "list of series",
                     "kind": "type",
                     "details": "See manual on lists"
              },
              {
                     "trigger": "matrices",
                     "annotation": "Array of numeric matrices",
                     "kind": "type",
                     "details": "See 'help array'"
              },
              {
                     "trigger": "matrix",
                     "annotation": "Matrix of numerics",
                     "kind": "type",
                     "details": "See 'help matrix'"
              },
              {
                     "trigger": "scalar",
                     "annotation": "Scalar object",
                     "kind": "type",
                     "details": "See 'help genr'"
              },
              {
                     "trigger": "series",
                     "annotation": "Series object",
                     "kind": "type",
                     "details": "See 'help genr'"
              },
              {
                     "trigger": "string",
                     "annotation": "String",
                     "kind": "type",
                     "details": "See manual on strings"
              },
              {
                     "trigger": "strings",
                     "annotation": "Array of string",
                     "kind": "type",
                     "details": "See manual on strings"
              },

              // Keywords
              {
                     "trigger": "const",
                     "annotation": "const qualifier",
                     "kind": "keyword",
                     //"details": "const qualifier"
              },
              {
                     "trigger": "debug",
                     "annotation": "Debug mode",
                     "kind": "keyword",
                     "details": "See manual on debugging"
              },
              {
                     "trigger": "display",
                     "annotation": "show plot immediately",
                     "kind": "keyword",
                     //"details": "bundle datatype"
              },
              {
                     "trigger": "end",
                     "annotation": "keyword for blocks",
                     "kind": "keyword",
                     //"details": "bundle datatype"
              },
              {
                     "trigger": "void",
                     "annotation": "Void qualifier",
                     "kind": "keyword",
                     "details": "No type/ value/ parameter"
              },
              {
                     "trigger": "return",
                     "annotation": "Return qualifier",
                     "kind": "keyword",
                     "details": "See 'help function'"
              },

              // Keywords of blocks
              {
                     "trigger": "function",
                     "annotation": "Function block",
                     "contents": "function $0\n\nend function",
                     "kind": "keyword",
                     "details": "See 'help function'"
              },
              // {
              //        "trigger": "end function",
              //        "annotation": "End function block",
              //        "contents": "end function",
              //        "kind": "keyword",
              //        "details": "See 'help function'"
              // },
              {
                     "trigger": "gmm",
                     "annotation": "gmm block",
                     "contents": "gmm $0\n\nend gmm",
                     "kind": "keyword",
                     "details": "See 'help gmm'"
              },
              /*{
                     "trigger": "end gmm",
                     "annotation": "End gmm block",
                     "contents": "end gmm",
                     "kind": "keyword",
                     "details": "See 'help gmm'"
              },*/
              {
                     "trigger": "mle",
                     "annotation": "mle block",
                     "contents": "mle $0\n\nend mle",
                     "kind": "keyword",
                     "details": "See 'help mle'"
              },
              /*{
                     "trigger": "end mle",
                     "annotation": "End mle block",
                     "contents": "end mle",
                     "kind": "keyword",
                     "details": "See 'help mle'"
              },*/
              {
                     "trigger": "nls",
                     "annotation": "nls block",
                     "contents": "nls $0\n\nend nls",
                     "kind": "keyword",
                     "details": "See 'help nls'"
              },
              /*{
                     "trigger": "end nls",
                     "annotation": "End nls block",
                     "contents": "end nls",
                     "kind": "keyword",
                     "details": "See 'help nls'"
              },*/
              {
                     "trigger": "outfile",
                     "annotation": "outfile block",
                     "contents": "outfile $0\n\nend outfile",
                     "kind": "keyword",
                     "details": "See 'help outfile'"
              },
              /*{
                     "trigger": "end outfile",
                     "annotation": "End outfile block",
                     "contents": "end outfile",
                     "kind": "keyword",
                     "details": "See 'help outfile'"
              },*/
              {
                     "trigger": "plot",
                     "annotation": "plot block",
                     "contents": "plot $0\n\nend plot",
                     "kind": "keyword",
                     "details": "See 'help plot'"
              },
              /*{
                     "trigger": "end plot",
                     "annotation": "End plot block",
                     "contents": "end plot",
                     "kind": "keyword",
                     "details": "See 'help plot'"
              },*/
              {
                     "trigger": "restrict",
                     "annotation": "restrict block",
                     "contents": "restrict $0\n\nend restrict",
                     "kind": "keyword",
                     "details": "See 'help restrict'"
              },
              /*{
                     "trigger": "end restrict",
                     "annotation": "End restrict block",
                     "contents": "end restrict",
                     "kind": "keyword",
                     "details": "See 'help restrict'"
              },*/
              {
                     "trigger": "system",
                     "annotation": "system of equations block",
                     "contents": "system $0\n\nend system",
                     "kind": "keyword",
                     "details": "See 'help system'"
              },
              /*{
                     "trigger": "end system",
                     "annotation": "End system of equations block",
                     "contents": "end system",
                     "kind": "keyword",
                     "details": "See 'help system'"
              },*/


              // Keywords for loops
              {
                     "trigger": "for",
                     "annotation": "Type of loop",
                     "kind": "keyword",
                     "details": "See 'help loop'"
              },
              {
                     "trigger": "foreach",
                     "annotation": "Type of loop",
                     "kind": "keyword",
                     "details": "See 'help loop'"
              },
              {
                     "trigger": "while",
                     "annotation": "Type of loop",
                     "kind": "keyword",
                     "details": "See 'help loop'"
              },
              {
                     "trigger": "endloop",
                     "annotation": "End loop block",
                     "kind": "keyword",
                     "details": "See 'help loop'"
              },

              // Further keywords
              {
                     "trigger": "break",
                     "annotation": "Break out of a loop",
                     "kind": "keyword",
              },
              {
                     "trigger": "output",
                     "annotation": "Option",
                     "kind": "keyword",
                     //"details": ""
              },
              {
                     "trigger": "options",
                     "annotation": "Arg. for plotting",
                     "kind": "keyword",
                     "details": "See 'help plot'"
              },
              {
                     "trigger": "quiet",
                     "annotation": "Reduce printout",
                     "kind": "keyword",
                     //"details": "See 'help plot'"
              },
              {
                     "trigger": "silent",
                     "annotation": "Don't print anything",
                     "kind": "keyword",
                     //"details": "See 'help plot'"
              },
              {
                     "trigger": "if",
                     "annotation": "Start if-block",
                     "kind": "keyword",
                     "details": "See 'help if'"
              },
              {
                     "trigger": "elif",
                     //"annotation": "elif-block",
                     "kind": "keyword",
                     "details": "See 'help if'"
              },
              {
                     "trigger": "else",
                     //"annotation": "elif-block",
                     "kind": "keyword",
                     "details": "See 'help if'"
              },
              {
                     "trigger": "endif",
                     "annotation": "End if-block",
                     "kind": "keyword",
                     "details": "See 'help if'"
              },


        ]
}
